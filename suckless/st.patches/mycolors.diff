diff --git a/x.c b/x.c
index da5084b..9ec2a44 100644
--- a/x.c
+++ b/x.c
@@ -776,11 +776,20 @@ xloadcols(void)
 				die("Could not allocate color %d\n", i);
 		}
 
+	/* set alpha value of bg color */
 	/* set alpha value of bg color */
 	if (USE_ARGB) {
-		dc.col[defaultbg].color.alpha = (0xffff * alpha) / OPAQUE;
-		dc.col[defaultbg].pixel &= 0x00111111;
-		dc.col[defaultbg].pixel |= alpha << 24;
+    // X11 uses premultiplied alpha values (i.e. 50% opacity white is
+    // 0x7f7f7f7f, not 0x7fffffff), so multiply color by alpha
+    dc.col[defaultbg].color.alpha = (0xffff * alpha) / OPAQUE; //0xcccc;
+    dc.col[defaultbg].color.red   = (dc.col[defaultbg].color.red   * alpha) / OPAQUE;
+    dc.col[defaultbg].color.green = (dc.col[defaultbg].color.green * alpha) / OPAQUE;
+    dc.col[defaultbg].color.blue  = (dc.col[defaultbg].color.blue  * alpha) / OPAQUE;
+
+    dc.col[defaultbg].pixel =
+      ((((dc.col[defaultbg].pixel & 0x00ff00ff) * alpha) / OPAQUE) & 0x00ff00ff) |
+      ((((dc.col[defaultbg].pixel & 0x0000ff00) * alpha) / OPAQUE) & 0x0000ff00) |
+      alpha << 24;
 	}
 	loaded = 1;
 }
@@ -1379,7 +1388,7 @@ xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int x, i
 
 	/* Change basic system colors [0-7] to bright system colors [8-15] */
 	if ((base.mode & ATTR_BOLD_FAINT) == ATTR_BOLD && BETWEEN(base.fg, 0, 7))
-		fg = &dc.col[base.fg];
+		fg = &dc.col[base.fg + 8];
 
 	if (IS_SET(MODE_REVERSE)) {
 		if (fg == &dc.col[defaultfg]) {
